buildCmd: cd ./src/src/utils/LogCompilation; mvn -e -X -Dmaven.test.skip=true compile
testCmd: true
lineLength: 4096
skipVerification: true
cbmcArguments:
  # Do not generate coverage comments on generated tests.
  java-generate-no-comments: true
phases:
  -
  #Phase 0 PRETTY AND SIMPLE - Simple models, quick cover, pretty Tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # Instrument the file as opposed to the function only
      cover-only: file
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 1 PRETTY AND COMPLEX - Standard models, longer run time, pretty tests, Do Not Test Private Method Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 2
      # Do not test any methods that have the specified access level.
      do-not-test-methods-with-access: [ private ]
      # Instrument the entry point function only.
      cover-function-only: false
      # instrument the file as opposed to the function only
      cover-only: file
  -
  #Phase 2 Simple and Private Directly
    timeout: 180
    cbmcArguments:
      # Use simple models containers (ArrayList, HashMap, HashSet,...) will have a maximum size of one.
      classpath: '/tools/cbmc/models-simple-overlay.jar:/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 1500
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: true
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 10
      # Bound the length of input strings.
      max-nondet-string-length: 10
      # Add constraint that strings are printable
      string-printable: true
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 1
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
      # If the logs contain output of the following then proceed to phase X
    nextPhase:
      # If the function is not analysable then do not pass onto the next phase
      not_analyzed: null
  -
  #Phase 3 Complex and Private Directly
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: 3000
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 3
      # Set string input value  
      string-input-value: ["foo", "Bar", "BAZ", "1234", "a,b,c", "1", "2", "3", "a/b/c", "a'b'c"]
  -
  #Phase 4 EXCEPTIONS
    timeout: 180
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 30
      # Bound the length of input strings.
      max-nondet-string-length: 30
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: true
      # Set an upper bound on loop unwinding.
  -
    #PHASE 5 Big numbers and less contraints on inputs 
    timeout: 300
    cbmcArguments:
      # Use the standard models library.
      classpath: '/tools/cbmc/models.jar:.'
      # Set a limit on the number of instructions that can be generated as part of a test trace.
      depth: false
      # never initialize reference-typed parameter to the entry point with null
      java-assume-inputs-non-null: false
      # Constrain the size of arrays created in the analyzed code.
      java-max-vla-length: 10000
      # Maximum allowed length for an array passed as test input.
      max-nondet-array-length: 100
      # Bound the length of input strings.
      max-nondet-string-length: 100
      # Add constraint that strings are printable
      string-printable: false
      # Make implicit runtime exceptions explicit.
      throw-runtime-exceptions: false
      # Set an upper bound on loop unwinding.
      unwind: 6
units:
#Target TGF: 99.3333333333
# - methods: 22
# - complexity: 225
# - construction: 9.0
# - dependency: 4.08333333333
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/Method.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/Method.java
#Target TGF: 49.5
# - methods: 8
# - complexity: 95
# - construction: 5.0
# - dependency: 3.0
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/UncommonTrap.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/UncommonTrap.java
#Target TGF: 49.5
# - methods: 4
# - complexity: 101
# - construction: 3.33333333333
# - dependency: 2.5
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/LogCompilation$MethodBCIPair.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/LogCompilation.java
#Target TGF: 137.449435532
# - methods: 20
# - complexity: 2140
# - construction: 9.5
# - dependency: 4.54417706477
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/LogParser.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/LogParser.java
#Target TGF: 135.106643357
# - methods: 6
# - complexity: 1349
# - construction: 6.0
# - dependency: 1.21707459207
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/LogCompilation.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/LogCompilation.java
#Target TGF: 203.116666667
# - methods: 41
# - complexity: 555
# - construction: 16.6666666667
# - dependency: 13.8666666667
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/Compilation.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/Compilation.java
#Target TGF: 83.8333333333
# - methods: 13
# - complexity: 147
# - construction: 9.0
# - dependency: 5.83333333333
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/LogCleanupReader.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/LogCleanupReader.java
#Target TGF: 75.0
# - methods: 11
# - complexity: 82
# - construction: 9.0
# - dependency: 8.5
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/Phase.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/Phase.java
#Target TGF: 68.8928571429
# - methods: 11
# - complexity: 370
# - construction: 5.66666666667
# - dependency: 3.22619047619
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/UncommonTrapEvent.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/UncommonTrapEvent.java
#Target TGF: 143.293650794
# - methods: 38
# - complexity: 633
# - construction: 15.3333333333
# - dependency: 12.5595238095
  - target:
    - dir: src/src/utils/LogCompilation/target/classes
      file: com/sun/hotspot/tools/compiler/CallSite.class
      sourceDir: src/src/utils/LogCompilation/src/main/java
      sourceFile: com/sun/hotspot/tools/compiler/CallSite.java
dependenciesOnClasspath:
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/Phase.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/Method.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/UncommonTrap.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogCompilation$MethodBCIPair.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogParser$LockElimination.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogParser.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogCompilation.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/BasicLogEvent.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/Compilation.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogCleanupReader.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogEvent.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/UncommonTrapEvent.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogParser$1.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogParser$2.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/LogParser$3.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/MakeNotEntrantEvent.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/CallSite.class
-
  source: classes
  classFile: com/sun/hotspot/tools/compiler/NMethod.class